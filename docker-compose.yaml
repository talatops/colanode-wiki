version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg17
    container_name: colanode_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - colanode_network

  redis:
    image: redis:7
    container_name: colanode_redis
    restart: always
    command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    networks:
      - colanode_network

  minio:
    image: minio/minio
    container_name: colanode_minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER: 'on'
      MINIO_DOMAIN: minio
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'
    volumes:
      - minio_data:/data
    ports:
      - '9000:9000'
      - '9001:9001'
    entrypoint: sh
    command: -c 'mkdir -p /data/colanode-avatars /data/colanode-files && minio server /data --address ":9000" --console-address ":9001"'
    networks:
      - colanode_network

  server:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    image: colanode_server
    container_name: colanode_server
    restart: always
    depends_on:
      - postgres
      - redis
      - minio
    env_file:
      - .env
    ports:
      - '3000:3000'
    networks:
      - colanode_network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  colanode_network:
    driver: bridge
