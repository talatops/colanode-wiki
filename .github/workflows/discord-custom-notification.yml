name: Custom Discord Notifications

on:
  push:
    branches: ['**']
    paths-ignore:
      - '*.md'
      - '.gitignore'
      - 'docs/'
      - 'README.md'
  create:
  pull_request:
    types: [opened, closed, reopened]
  workflow_run:
    types: [completed]
    workflows: ["Deploy to EC2"]

jobs:
  notify:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Determine Notification Message
        id: set_message
        run: |
          echo "REPO_NAME: ${{ github.repository }}"
          echo "BRANCH_NAME: ${{ github.ref_name }}"
          echo "EVENT_NAME: ${{ github.event_name }}"
          echo "COMMIT_MESSAGE: ${{ github.event.head_commit.message }}"
          echo "COMMIT_SHA_SHORT: ${{ github.sha }}"
          echo "COMPARE_URL: ${{ github.event.compare }}"
          MESSAGE=""
          REPO_NAME="${{ github.repository }}"
          ACTOR="${{ github.actor }}"
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          DISCORD_USER_ID="1015923238674640896"
          MENTION="<@${DISCORD_USER_ID}>"

          if [[ "${{ github.event_name }}" == "push" ]]; then
            COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
            COMMIT_SHA_SHORT="${{ github.sha }}"
            BRANCH_NAME="${{ github.ref_name }}"
            COMPARE_URL="${{ github.event.compare }}"
            MESSAGE="üì¢ **Code Push Alert!** $MENTION\n"
            MESSAGE+="**Repository:** $REPO_NAME\n"
            MESSAGE+="**Branch:** $BRANCH_NAME\n"
            MESSAGE+="**Pushed by:** $ACTOR\n"
            MESSAGE+="**Commit:** [$COMMIT_SHA_SHORT]($RUN_URL)\n"
            # Safely handle COMMIT_MESSAGE as a literal string
            MESSAGE+="**Message:** ```\"$COMMIT_MESSAGE\"```"

          elif [[ "${{ github.event_name }}" == "create" ]]; then
            REF_TYPE="${{ github.event.ref_type }}"
            REF_NAME="${{ github.event.ref }}"
            MESSAGE="‚ú® **New ${REF_TYPE} Created!** $MENTION\n"
            MESSAGE+="**Repository:** $REPO_NAME\n"
            MESSAGE+="**Created by:** $ACTOR"

          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PR_ACTION="${{ github.event.action }}"
            PR_TITLE="${{ github.event.pull_request.title }}"
            PR_NUMBER="${{ github.event.pull_request.number }}"
            PR_URL="${{ github.event.pull_request.html_url }}"
            PR_MERGED="${{ github.event.pull_request.merged }}"
            STATUS_TEXT="opened"
            if [[ "$PR_ACTION" == "closed" ]]; then
              if [[ "$PR_MERGED" == "true" ]]; then
                MESSAGE="üéâ **Pull Request Merged!** $MENTION\n"
                STATUS_TEXT="merged"
              else
                MESSAGE="‚ùå **Pull Request Closed!** $MENTION\n"
                STATUS_TEXT="closed"
              fi
            elif [[ "$PR_ACTION" == "opened" ]]; then
              MESSAGE="üÜï **New Pull Request!** $MENTION\n"
            elif [[ "$PR_ACTION" == "reopened" ]]; then
              MESSAGE="üîÑ **Pull Request Reopened!** $MENTION\n"
            fi
            MESSAGE+="**PR #${PR_NUMBER}:** $PR_TITLE\n"
            MESSAGE+="**Repository:** $REPO_NAME\n"
            MESSAGE+="**Status:** $STATUS_TEXT by $ACTOR\n"
            MESSAGE+="[View PR]($PR_URL)"

          elif [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            WORKFLOW_NAME="${{ github.event.workflow_run.name }}"
            WORKFLOW_STATUS="${{ github.event.workflow_run.conclusion }}"
            WORKFLOW_URL="${{ github.event.workflow_run.html_url }}"
            STATUS_EMOJI="üü°"
            if [[ "$WORKFLOW_STATUS" == "success" ]]; then
              MESSAGE="‚úÖ **Workflow Completed Successfully!** $MENTION\n"
              STATUS_EMOJI="‚úÖ"
            elif [[ "$WORKFLOW_STATUS" == "failure" ]]; then
              MESSAGE="üö® **Workflow Failed!** $MENTION\n"
              STATUS_EMOJI="‚ùå"
            elif [[ "$WORKFLOW_STATUS" == "cancelled" ]]; then
              MESSAGE="üö´ **Workflow Cancelled!** $MENTION\n"
              STATUS_EMOJI="üö´"
            fi
            MESSAGE+="$STATUS_EMOJI **Workflow:** $WORKFLOW_NAME\n"
            MESSAGE+="**Repository:** $REPO_NAME\n"
            MESSAGE+="**Status:** $WORKFLOW_STATUS\n"
            MESSAGE+="**Triggered by:** $ACTOR\n"
            MESSAGE+="[View Run]($WORKFLOW_URL)"
          fi

          echo "::set-output name=message::$MESSAGE"

      - name: Send Discord Notification
        uses: Ilshidur/action-discord@master
        if: steps.set_message.outputs.message != ''
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: ${{ steps.set_message.outputs.message }}

      - name: Post Checkout repository
        run: echo "Repository checkout completed"
