name: Custom Discord Notifications

on:
  push:
    branches: ['**']
    paths-ignore:
      - '*.md'
      - '.gitignore'
      - 'docs/'
      - 'README.md'
  create:
  pull_request:
    types: [opened, closed, reopened]
  workflow_run:
    workflows: ["Deploy to EC2"]
    types: [completed]

jobs:
  notify:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine Notification Message
        id: set_message
        run: |
          # Initialize MESSAGE as an empty string
          MESSAGE=""

          REPO_NAME="${{ github.repository }}"
          ACTOR="${{ github.actor }}"
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          DISCORD_USER_ID="1015923238674640896"
          MENTION="<@${DISCORD_USER_ID}>"

          if [[ "${{ github.event_name }}" == "push" ]]; then
            COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
            COMMIT_SHA_SHORT="${{ github.sha }}"
            BRANCH_NAME="${{ github.ref_name }}"
            COMPARE_URL="${{ github.event.compare }}"

            MESSAGE=$(cat <<EOF
📢 **Code Push Alert!** $MENTION
**Repository:** $REPO_NAME
**Branch:** $BRANCH_NAME
**Pushed by:** $ACTOR
**Commit:** [$COMMIT_SHA_SHORT]($RUN_URL)
**Message:** \`\`\`
${COMMIT_MESSAGE}
\`\`\`
EOF
)

          elif [[ "${{ github.event_name }}" == "create" ]]; then
            REF_TYPE="${{ github.event.ref_type }}"
            REF_NAME="${{ github.event.ref }}"
            
            MESSAGE=$(cat <<EOF
✨ **New ${REF_TYPE} Created!** $MENTION
**Repository:** $REPO_NAME
**Created by:** $ACTOR
EOF
)

          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PR_ACTION="${{ github.event.action }}"
            PR_TITLE="${{ github.event.pull_request.title }}"
            PR_NUMBER="${{ github.event.pull_request.number }}"
            PR_URL="${{ github.event.pull_request.html_url }}"
            PR_MERGED="${{ github.event.pull_request.merged }}"
            
            STATUS_TEXT="opened"
            
            if [[ "$PR_ACTION" == "closed" ]]; then
              if [[ "$PR_MERGED" == "true" ]]; then
                STATUS_TEXT="merged"
                MESSAGE="🎉 **Pull Request Merged!** $MENTION"
              else
                STATUS_TEXT="closed"
                MESSAGE="❌ **Pull Request Closed!** $MENTION"
              fi
            elif [[ "$PR_ACTION" == "opened" ]]; then
              MESSAGE="🆕 **New Pull Request!** $MENTION"
            elif [[ "$PR_ACTION" == "reopened" ]]; then
              MESSAGE="🔄 **Pull Request Reopened!** $MENTION"
            fi
            
            MESSAGE=$(cat <<EOF
${MESSAGE}
**PR #${PR_NUMBER}:** $PR_TITLE
**Repository:** $REPO_NAME
**Status:** $STATUS_TEXT by $ACTOR
[View PR]($PR_URL)
EOF
)

          elif [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            WORKFLOW_NAME="${{ github.event.workflow_run.name }}"
            WORKFLOW_STATUS="${{ github.event.workflow_run.conclusion }}"
            WORKFLOW_URL="${{ github.event.workflow_run.html_url }}"
            
            STATUS_EMOJI="🟡"
            
            if [[ "$WORKFLOW_STATUS" == "success" ]]; then
              MESSAGE="✅ **Workflow Completed Successfully!** $MENTION"
              STATUS_EMOJI="✅"
            elif [[ "$WORKFLOW_STATUS" == "failure" ]]; then
              MESSAGE="🚨 **Workflow Failed!** $MENTION"
              STATUS_EMOJI="❌"
            elif [[ "$WORKFLOW_STATUS" == "cancelled" ]]; then
              MESSAGE="🚫 **Workflow Cancelled!** $MENTION"
              STATUS_EMOJI="🚫"
            fi
            
            MESSAGE=$(cat <<EOF
${MESSAGE}
${STATUS_EMOJI} **Workflow:** $WORKFLOW_NAME
**Repository:** $REPO_NAME
**Status:** $WORKFLOW_STATUS
**Triggered by:** $ACTOR
[View Run]($WORKFLOW_URL)
EOF
)
          fi

          echo "message=$MESSAGE" >> $GITHUB_OUTPUT
        shell: bash

      - name: Send Discord Notification
        uses: Ilshidur/action-discord@0.11.0
        if: steps.set_message.outputs.message != ''
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL_CUSTOM }}
        with:
          args: ${{ steps.set_message.outputs.message }}
