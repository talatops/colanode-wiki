
name: de
env:
  REMOTE_DIR: /home/ubuntu/colanode

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '*.md'
      - '.gitignore'
      - 'docs/'
      - 'README.md'
  workflow_dispatch: # Allows manual triggering from the GitHub Actions tab

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up environment
        run: |
          echo "${{ secrets.EC2_ENV }}" > .env
      
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Prepare and copy files
        run: |
          # Create the remote directory if it doesn't exist
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} "mkdir -p ${{ env.REMOTE_DIR }}"
          # Copy all files from the current directory and the .env file to the remote EC2 instance
          scp -i ~/.ssh/id_rsa -r ./* .env ubuntu@${{ secrets.EC2_HOST }}:${{ env.REMOTE_DIR }}/

      - name: Deploy
        run: |
          # Connect to EC2 and execute deployment commands
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << 'ENDSSH'
          cd ${{ env.REMOTE_DIR }}
          # Stop and remove existing Docker containers
          docker-compose down --remove-orphans
          # Build and start new Docker containers in detached mode
          docker-compose up -d --build
          ENDSSH

      - name: Cleanup SSH key and .env file
        if: always() # This step will always run, even if previous steps fail
        run: |
          # Remove sensitive files from the runner after the job completes
          rm -f ~/.ssh/id_rsa
          rm -f .env
